version: "3.7"

services:
  gitea:
    image: gitea/gitea:latest
    #image: gitea/gitea:latest
    container_name: gitea
    environment:
      - APP_NAME=Gitea
      # - USER_UID=1000
      # - USER_GID=1000
      - ROOT_URL=http://${SERVER_IP}:3001
      - SSH_DOMAIN=${SERVER_IP}
      - SSH_PORT=2222
      - HTTP_PORT=3001
      - DB_TYPE=postgres
      - DB_HOST=gitea-db:5432
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWD=${DB_PASSWD}
    restart: always
    volumes:
      - ${SERVER_FOLDER_PATH}/gitea:/data
    ports:
      - "3001:3001"
      - "2222:22"
    networks:
      - appnet

  gitea-db:
    image: postgres:alpine
    container_name: gitea-db
    restart: always
    volumes:
      - ${SERVER_FOLDER_PATH}/gitea-db:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWD}
      - POSTGRES_DB=${DB_NAME}
    networks:
      - appnet

  drone-server:
    image: drone/drone:latest
    #image: ruanbekker/drone-server:basic-auth-1.2.1
    container_name: drone-server
    ports:
      - 3002:80
      - 9000
    volumes:
      - ${SERVER_FOLDER_PATH}/drone:/var/lib/drone/
    restart: always
    depends_on:
      - gitea
    environment:
      - DRONE_OPEN=true
      - DRONE_GITEA=true
      - DRONE_NETWORK=appnet
      - DRONE_DEBUG=true
      - DRONE_ADMIN=nax
      - DRONE_USER_CREATE=username:nax,admin:true
      - DRONE_SERVER_PORT=:80
      - DRONE_DATABASE_DRIVER=postgres
      - DRONE_DATABASE_DATASOURCE=postgres://postgres:postgres@gitea-db:5432/postgres?sslmode=disable
      - DRONE_GIT_ALWAYS_AUTH=false
      - DRONE_GITEA_SERVER=http://${SERVER_IP}:3001
      - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
      - DRONE_SERVER_HOST=${SERVER_IP}:3002
      - DRONE_HOST=http://${SERVER_IP}:3002
      - DRONE_SERVER_PROTO=http
      - DRONE_TLS_AUTOCERT=false
      - DRONE_AGENTS_ENABLED=true
      - DRONE_GITEA_CLIENT_ID=${DRONE_GITEA_CLIENT_ID}
      - DRONE_GITEA_CLIENT_SECRET=${DRONE_GITEA_CLIENT_SECRET}
    networks:
      - appnet

  drone-agent:
    image: drone/agent:latest
    #image: ruanbekker/drone-agent:basic-auth-1.2.1
    container_name: drone-agent
    command: agent
    restart: always
    depends_on:
      - drone-server
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${SERVER_FOLDER_PATH}/drone-agent:/data
    environment:
      - DRONE_RPC_SERVER=http://${SERVER_IP}:3002
      - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
      - DRONE_RUNNER_CAPACITY=1
      - DRONE_RUNNER_NETWORKS=appnet
    networks:
      - appnet

#volumes:
#  gitea: {}
#  gitea-db: {}
#  drone: {}
#  drone-agent: {}

networks:
  appnet:
    name: appnet
